@{
    ViewBag.Title = "Stats";

    Souls.Model.Game game = ViewBag.game;

    List<Souls.Model.Player> players = new List<Souls.Model.Player>();
    players.Add(game.player1);
    players.Add(game.player2);

    List<Souls.Model.GameLog> log = ViewBag.log;

    List<Souls.Model.Card> cards = ViewBag.cards;


}
<div class="stats-title">Game Summary for #@ViewBag.gameId</div>



<div class="container-fluid stats-battlewindow">
    @{int count = 0;}
    @foreach (var player in players)
    {
        if (count++ == 1)
        {
            <div class="stats-versus col-lg-2">
            </div>
        }

        <div class="stats-player-block col-lg-5">
            <div class="stats-player-name col-lg-6 col-lg-offset-3">@player.name</div>
            <div class="stats-player-portrait col-lg-6 col-lg-offset-3" style="background-image: url(/Content/Images/Player/Portraits/@(player.playerType.id).png)"></div>
            <div class="stats-player-stats col-lg-6 col-lg-offset-3">
                <p class="">Type: @player.playerType.name</p>
                <p class="">Attack:@player.playerType.attack</p>
                <p class="">Health:@player.playerType.health</p>
            </div>
        </div>

    }


    <div class="stats-log-title col-lg-offset-1">Game History</div>
    <div class="stats-log col-lg-10 col-lg-offset-1">
        @foreach (Souls.Model.GameLog logItem in log)
        {

            if (logItem.gameLogType.title == "WON")
            {
                @String.Format(logItem.gameLogType.text,
            players.Where(x => x.id == logItem.obj1id).First().name,
            players.Where(x => x.id == logItem.obj2id).First().name);
            }
            else if (logItem.gameLogType.title == "DEFEAT")
            {
                @String.Format(logItem.gameLogType.text,
            players.Where(x => x.id == logItem.obj1id).First().name,
            players.Where(x => x.id == logItem.obj2id).First().name);
            }
            else if (logItem.gameLogType.title == "DRAW")
            {
                @String.Format(logItem.gameLogType.text,
            players.Where(x => x.id == logItem.obj1id).First().name,
            players.Where(x => x.id == logItem.obj2id).First().name);
            }
            else if (logItem.gameLogType.title == "CARD_ATTACK_PLAYER")
            {
                @String.Format(logItem.gameLogType.text,
            cards.Where(x => x.id == logItem.obj1id).First().name,
            players.Where(x => x.id == logItem.obj2id).First().name,
            cards.Where(x => x.id == logItem.obj1id).First().attack);
            }
            else if (logItem.gameLogType.title == "CARD_ATTACK_CARD")
            {
                @String.Format(logItem.gameLogType.text,
            cards.Where(x => x.id == logItem.obj1id).First().name,
            cards.Where(x => x.id == logItem.obj2id).First().name,
            cards.Where(x => x.id == logItem.obj1id).First().attack);

            }
            else if (logItem.gameLogType.title == "PLAYER_ATTACK_PLAYER")
            {
                @String.Format(logItem.gameLogType.text,
            players.Where(x => x.id == logItem.obj1id).First().name,
            players.Where(x => x.id == logItem.obj2id).First().name,
            players.Where(x => x.id == logItem.obj1id).First().playerType.attack);
            }
            else if (logItem.gameLogType.title == "PLAYER_ATTACK_CARD")
            {
             @String.Format(logItem.gameLogType.text,
            players.Where(x => x.id == logItem.obj1id).First().name,
            cards.Where(x => x.id == logItem.obj2id).First().name,
            players.Where(x => x.id == logItem.obj1id).First().playerType.attack);
            }



            <br />
        }
    </div>

</div>



<script>
    $('.stats-log').perfectScrollbar({
        suppressScrollX: true,
        includePadding: true
    });




</script>
